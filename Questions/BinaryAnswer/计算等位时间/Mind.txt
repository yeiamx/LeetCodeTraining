解题思路：
前面有m个人，等待时间t范围[0, min(waiters) * m]
最大值很好理解，前面m个人我全让一个服务员i服务。服务时间就是waiters[i] * m, 更何况我还可能有其他服务员帮忙，肯定更快。然后我可以选个快点的服务员稍微缩小点范围。

f(waiters, time): 所有服务员都工作time个单位，最多能服务多少人（正在服务的也算）
比如waiters = [2, 4] time = 5, f = 5个人，
    waiter[0]在时刻2，时刻4结束服务，然后给第三个人服务了1个单位
    waiter[1]在时刻4结束服务，然后给第二个人服务了1个单位
    3+2 = 5

设题解为ans，即前面m个人的时候我需要等待ans分钟。
有结论f(waiters, ans) = m + 1;(ans分钟后，我自己要能被服务上，那总人数为m+1)， 且t < ans时 f(waiters, t) < m + 1（否则矛盾，ans就是前面m个人我要等的时间，你要是还有t < ans让f=m+1, 那ans不就不成立了）
f单调递增（服务员服务得越久，服务人数越多）
因此我们找到f(waiters, t) < m + 1的右边界+1即可（or >= 的左边界）。

f：直接time除以效率即可（有余数就向上取整代表正在服务的那个人）

