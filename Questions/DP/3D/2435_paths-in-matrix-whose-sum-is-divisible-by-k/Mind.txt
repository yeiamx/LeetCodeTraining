解题思路：路径和被K整除，我们可以联想到使用路径和除以K的模作为一个维度。模和sum一样，也是能通过子问题的解得到当前状态解
状态 dp[i][j][r] 从坐标(i,j)出发到(n-1, m-1) （向右向下），所有路径中，路径和%K的值 = r 的路径数量
题解可以认为是dp[0][0][0];

边界：dp[n-1][m-1][r] : 此时路径和即为matrix(n-1, m-1), 所以dp[n-1][m-1][matrix[n-1][m-1] % k] = 1;
范围：r是 %k的余数，所以0-k-1

转移：路径和%k的余数为r， 可以通过当前数和剩下路径（右、下）的余数构造而成
例：k = 7，r = 4. 当前数cur为10 10%7 = 3. 那么我们需要剩下路径和为1= r - cur%k， 3+1 = 4 = r（同余定理，模的和=和的模）
当前数为12 12 % 7 = 5，  剩下的路径和为6=  k+r-cur%k
将剩下的路径和统一表达为rNeed
因此可得dp[i][j][r] = dp[i+1][j][rNeed] + dp[i][j+1][rNeed];

递推：和一层层依赖的三维DP不同，这个转移看起来更像一个二维表的依赖，那我们就把它想象成一个带有高度（height = r）的二维表。
填完第n-1行和第m-1列之后，从右向左，从下到上地填即可
